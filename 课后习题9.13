import java.util.Scanner;
public class ggg {
//Great a Scanner
		 Scanner input = new Scanner(System.in);
		 //Enter array value;
		int row,column;
		System.out.print("Enter the number of rows and columns in the array:");
		row = input.nextInt();
		column = input.nextInt();
		double [][] m = new double[row][column];
		for(int i = 0;i<row;i++){
			for(int j = 0;j<column;j++){
				m[i][j] = input.nextDouble();
			}
			//System.out.printf("\n");
		}
		//Found the maxNumber;
		double maxValue = m[0][0];
		int g=0,h=0;
		
		for(int i = 0;i<row;i++){
			for(int j = 0;j<column;j++){
				if(m[i][j]>maxValue)
				{
					maxValue = m[i][j];
					g=i;
					h=j;
				}
			}
		}
		System.out.println("Maxvalue is " + maxValue + " at(" + g + " " + h + ")");
	}

}
public class LinearEquartion {
		int a,b,c,d,e,f;
		LinearEquartion(int a,int b,int c,int d,int e,int f){
			this.a = a;
			this.b = b;
			this.c = c;
			this.d = d;
			this.e = e;
			this.f = f;
		}
		int getA() {
			return a;
		}
		int getB() {
			return b;
		}
		int getC() {
			return c;
		}
		int getD() {
			return d;
		}
		int getE() {
			return e;
		}
		int getF() {
			return f;
		}
		boolean isSolvablee() {
			return a * d - b * c != 0 ? true:false;
		}
		int getX(){
			return (e * d - b * f) / (a * d - b * c);
		}
		int getY(){
			return (a * f - e * c) / (a * d - b * c);
		}	
	
}
